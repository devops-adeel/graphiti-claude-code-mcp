name: Secret Scanning

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    # Run daily at 2 AM UTC
    - cron: '0 2 * * *'

permissions:
  contents: read
  security-events: write

jobs:
  trufflehog:
    name: TruffleHog Secret Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history for scanning

      - name: Run TruffleHog
        uses: trufflesecurity/trufflehog@main
        with:
          path: ./
          base: ${{ github.event.repository.default_branch }}
          head: HEAD
          extra_args: --no-verification --fail

  gitleaks:
    name: Gitleaks Secret Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Run Gitleaks
        uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITLEAKS_CONFIG: .gitleaks.toml

      - name: Upload SARIF report
        if: always()
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: results.sarif

  git-secrets:
    name: Git-Secrets Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install git-secrets
        run: |
          git clone https://github.com/awslabs/git-secrets.git
          cd git-secrets
          sudo make install

      - name: Configure git-secrets
        run: |
          git secrets --install
          # Add Langfuse patterns
          git secrets --add 'pk-lf-[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}'
          git secrets --add 'sk-lf-[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}'
          # Add OpenAI patterns
          git secrets --add 'sk-[a-zA-Z0-9]{20,}'
          # Allow test patterns
          git secrets --add --allowed 'pk-lf-test-[0-9]{8}-[0-9]{4}-[0-9]{4}-[0-9]{4}-[0-9]{12}'
          git secrets --add --allowed 'sk-lf-test-[0-9]{8}-[0-9]{4}-[0-9]{4}-[0-9]{4}-[0-9]{12}'
          git secrets --add --allowed 'PLACEHOLDER_REPLACE_WITH_ACTUAL'

      - name: Scan repository
        run: |
          git secrets --scan

  notify-on-failure:
    name: Notify on Secret Detection
    needs: [trufflehog, gitleaks, git-secrets]
    if: failure()
    runs-on: ubuntu-latest
    steps:
      - name: Create Issue
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const issue = await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: 'ðŸš¨ Security Alert: Potential Secrets Detected',
              body: `## Security Scan Failed

              One or more secret scanning tools detected potential sensitive information in the repository.

              **Workflow Run:** [${context.runNumber}](https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId})
              **Branch:** ${context.ref}
              **Commit:** ${context.sha}

              ### Immediate Actions Required:
              1. Review the workflow logs to identify the detected secrets
              2. Rotate any exposed credentials immediately
              3. Remove the secrets from the repository history if needed
              4. Update the code to use proper secret management

              ### Resources:
              - [Security Incident Response Guide](./SECURITY.md)
              - [Removing Sensitive Data from Repository](https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/removing-sensitive-data-from-a-repository)

              cc: @${context.actor}`,
              labels: ['security', 'critical', 'incident']
            })
            console.log(`Issue created: ${issue.data.html_url}`)

# Pre-commit hooks for security and code quality
# Install: pip install pre-commit
# Setup: pre-commit install
# Manual run: pre-commit run --all-files

repos:
  # TruffleHog - Secret Detection
  - repo: local
    hooks:
      - id: trufflehog
        name: TruffleHog Secret Scanner
        description: Detect secrets in your data before committing
        entry: bash -c 'if command -v trufflehog &> /dev/null; then trufflehog git file://. --since-commit HEAD --no-verification --fail; else echo "Warning - TruffleHog not installed. Install with brew install trufflehog"; fi'
        language: system
        stages: ["pre-commit", "pre-push"]
        pass_filenames: false
        always_run: true

  # Gitleaks - Additional Secret Detection
  - repo: https://github.com/gitleaks/gitleaks
    rev: v8.24.0
    hooks:
      - id: gitleaks

  # Check for files that would be ignored
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: check-added-large-files
        args: ['--maxkb=1000']
        description: Prevent large files from being committed
      - id: check-case-conflict
        description: Check for files that would conflict in case-insensitive filesystems
      - id: check-merge-conflict
        description: Check for files that contain merge conflict strings
      - id: detect-private-key
        description: Detect presence of private keys
      - id: end-of-file-fixer
        description: Ensure files end with a newline
      - id: trailing-whitespace
        description: Trim trailing whitespace

  # Python specific checks
  - repo: https://github.com/psf/black
    rev: 24.3.0
    hooks:
      - id: black
        language_version: python3
        description: Format Python code with Black

  # Sync dependencies from pyproject.toml to requirements.txt
  - repo: local
    hooks:
      - id: sync-dependencies
        name: Sync dependencies
        description: Keep requirements.txt in sync with pyproject.toml
        entry: python3 scripts/sync-dependencies.py
        language: system
        files: ^pyproject\.toml$
        pass_filenames: false

  # Security audit for Python dependencies using pip-audit
  - repo: https://github.com/pypa/pip-audit
    rev: v2.9.0
    hooks:
      - id: pip-audit
        description: Check Python dependencies for known security vulnerabilities
        args: ["--desc", "--fix", "--dry-run"]
        # pip-audit supports both pyproject.toml and requirements.txt natively
